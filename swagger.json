
{
    "swagger": "2.0",
    "info": {
        "title": "itembase API",
        "description": "An API for requesting data from users connected to itembase.<p>You can issue range queries by datetimes or get single entities by id.</p><p>There are four entity types: Transaction, Product, Buyer and Profile. Entities that originate from the same data connection have the same <i>source_id</i>. Get the Profile resource which describes the user's profile on the remote platform (e.g. a seller's account, a shop profile) to understand where the related entities (i. E. with the same source_id) originate.</p>",
        "version": "1.0.0"
    },
    "host": "sandbox.api.itembase.io",
    "schemes": [
        "http"
    ],
    "basePath": "/v1",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users/{user_id}/transactions/{id}": {
            "get": {
                "summary": "Requests a single specific Transaction entity from itembase for a specific user and for a specific transaction id.",
                "tags": [
                    "Transactions"
                ],
                "description": "The transaction endpoint requests a single specific Transaction entity from itembase for a specific user and for a specific transaction id.\n",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user_id of the owner of the resource. This id must be a well-formed UUID string.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the requested transaction.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response entity will contain the single requested Transaction entity listed under the \"documents\" array in the response payload.",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "sandbox_auth": [
                            "user.minimal",
                            "connection.transaction"
                        ]
                    }
                ]
            }
        },
        "/users/{user_id}/transactions": {
            "get": {
                "summary": "Requests all Transaction entities from itembase for a specific authenticated user, where the requested entities match a set of default or user-specified search criteria.",
                "description": "Requests all Transaction entities from itembase for a specific authenticated user, where the requested entities match a set of search criteria. Transactions can be requested with no additional search parameters, in which case the request will query all transactions for the authenticated user. Regardless of whether the request includes search parameters or not, by default only a subset of matched Transaction entities are returned (a maximum of 50 entities). Note however, that a successful query response will include fields \"num_documents_found\" (which gives the total number of entities which match the search criteria) and \"num_documents_returned\" (which gives the number of entities returned in the payload). This information can be used to construct additional paginated requests. A successful response returns a sorted list of entities, ordered by default by the field \"created_at\" in descending order (i.e. newest first). The sort order can be changed by altering the request parameters below. \n",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user_id of owner of the resource. This must be a well-formed UUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "created_at_from",
                        "in": "query",
                        "description": "Set this datetime parameter to request entities that were created at or after this datetime.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "created_at_to",
                        "in": "query",
                        "description": "Set this datetime parameter to request entities that were created at or before this datetime.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "updated_at_from",
                        "in": "query",
                        "description": "Set this datetime parameter to request entities that were updated at or after this datetime.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "updated_at_to",
                        "in": "query",
                        "description": "Set this datetime parameter to request entities that were updated at or before this datetime.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "start_at_document",
                        "in": "query",
                        "description": "Set this equal to the index of the first document to be returned. Use this to create simple paginated requests. By default all requests start at document index zero.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "document_limit",
                        "in": "query",
                        "description": "Set this parameter to change the default number of entities which should be returned with each successful request. By default this is set to 50. This parameter can be used in conjunction with the start_at_document parameter to create simple paginated requests.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Transactions"
                ],
                "responses": {
                    "200": {
                        "description": "Response entity will contain the a list of sorted Transacion entities accessible under the \"documents\" array in the response payload.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Transaction"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "sandbox_auth": [
                            "user.minimal",
                            "connection.transaction"
                        ]
                    }
                ]
            }
        },
        "/users/{user_id}/products/{id}": {
            "get": {
                "summary": "Requests a single specific Product entity from itembase for a specific user and for a specific product id.",
                "tags": [
                    "Products"
                ],
                "description": "The product endpoint requests a single specific product entity from itembase for a specific user and for a specific product id.\n",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user_id of the owner of the resource. This id must be a well-formed UUID string.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the requested product.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response entity will contain the single requested Product entity listed under the \"documents\" array in the response payload.",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "sandbox_auth": [
                            "user.minimal",
                            "connection.product"
                        ]
                    }
                ]
            }
        },
        "/users/{user_id}/products": {
            "get": {
                "summary": "Requests all Product entities from itembase for a specific authenticated user, where the requested entities match a set of default or user-specified search criteria.",
                "description": "Requests all Product entities from itembase for a specific authenticated user, where the requested entities match a set of search criteria. Products can be requested with no additional search parameters, in which case the request will query all products for the authenticated user. Regardless of whether the request includes search parameters or not, by default only a subset of matched Product entities are returned (a maximum of 50 entities). Note however, that a successful query response will include fields \"num_documents_found\" (which gives the total number of entities which match the search criteria) and \"num_documents_returned\" (which gives the number of entities returned in the payload). This information can be used to construct additional paginated requests. A successful response returns a sorted list of entities, ordered by default by the field \"created_at\" in descending order (i.e. newest first). The sort order can be changed by altering the request parameters below. \n",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user_id of owner of the resource. This must be a well-formed UUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "created_at_from",
                        "in": "query",
                        "description": "Set this datetime parameter to request entities that were created at or after this datetime.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "created_at_to",
                        "in": "query",
                        "description": "Set this datetime parameter to request entities that were created at or before this datetime.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "updated_at_from",
                        "in": "query",
                        "description": "Set this datetime parameter to request entities that were updated at or after this datetime.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "updated_at_to",
                        "in": "query",
                        "description": "Set this datetime parameter to request entities that were updated at or before this datetime.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "start_at_document",
                        "in": "query",
                        "description": "Set this equal to the index of the first document to be returned. Use this to create simple paginated requests. By default all requests start at document index zero.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "document_limit",
                        "in": "query",
                        "description": "Set this parameter to change the default number of entities which should be returned with each successful request. By default this is set to 50. This parameter can be used in conjunction with the start_at_document parameter to create simple paginated requests.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Products"
                ],
                "responses": {
                    "200": {
                        "description": "Response entity will contain the a list of sorted Product entities accessible under the \"documents\" array in the response payload.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "sandbox_auth": [
                            "user.minimal",
                            "connection.product"
                        ]
                    }
                ]
            }
        },
        "/users/{user_id}/profiles": {
            "get": {
                "summary": "User Profile",
                "description": "The user Profile endpoint returns the general profile information of the users on the remote platform, e.g. general eBay seller account details.",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Profiles"
                ],
                "responses": {
                    "200": {
                        "description": "An array of profiles. One for each remote platform this user has connected.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Profile"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "sandbox_auth": [
                            "user.minimal",
                            "connection.profile"
                        ]
                    }
                ]
            }
        },
        "/users/{user_id}/buyers/{id}": {
            "get": {
                "summary": "Buyer",
                "tags": [
                    "Buyers"
                ],
                "description": "The Buyer endpoint returns a Buyer entity by id.\n",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user_id of owner of the resource, a UUID string.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Buyer to fetch.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Buyer",
                        "schema": {
                            "$ref": "#/definitions/Buyer"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "sandbox_auth": [
                            "user.minimal",
                            "connection.buyer"
                        ]
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "sandbox_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://sandbox.accounts.itembase.io/oauth/v2/auth",
            "flow": "implicit",
            "scopes": {
                "user.minimal": "basic user data raed only",
                "connection.transaction": "transaction data read only",
                "connection.product": "product data read only",
                "connection.profile": "profile data dread only",
                "connection.buyer": "buyer data read only"
            }
        }
    },
    "definitions": {
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Profile": {
            "required": [
                "id",
                "source_id",
                "original_reference",
                "platform_name",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                },
                "original_reference": {
                    "type": "string"
                },
                "platform_id": {
                    "type": "string"
                },
                "platform_name": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "pattern": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-]*)?\\??(?:[\\-\\+=&;%@\\.\\w]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)"
                },
                "avatar_url": {
                    "type": "string",
                    "pattern": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-]*)?\\??(?:[\\-\\+=&;%@\\.\\w]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)"
                },
                "language": {
                    "type": "string",
                    "pattern": "^[A-Za-z]{2}$"
                },
                "locale": {
                    "type": "string",
                    "pattern": "^[a-z]{2}_[A-Z]{2}$"
                },
                "currency": {
                    "type": "string",
                    "pattern": "^[A-Z]{3}$"
                },
                "contact": {
                    "$ref": "#/definitions/Contact"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Transaction": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                },
                "original_reference": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "currency": {
                    "type": "string",
                    "pattern": "^[A-Z]{3}$"
                },
                "total_price": {
                    "type": "number",
                    "format": "float"
                },
                "total_price_net": {
                    "type": "number",
                    "format": "float"
                },
                "total_tax": {
                    "type": "number",
                    "format": "float"
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "global": {
                            "type": "string",
                            "enum": [
                                "open",
                                "completed",
                                "cancelled"
                            ]
                        },
                        "payment": {
                            "type": "string",
                            "enum": [
                                "not_paid",
                                "processing",
                                "partial",
                                "paid",
                                "cancelled",
                                "refunded"
                            ]
                        },
                        "shipping": {
                            "type": "string",
                            "enum": [
                                "not_shipped",
                                "pickpack",
                                "pending",
                                "partial",
                                "completed",
                                "returned"
                            ]
                        }
                    },
                    "required": [
                        "global"
                    ]
                },
                "products": {
                    "type": "array",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/Product"
                            },
                            {
                                "properties": {
                                    "quantity": {
                                        "type": "number"
                                    },
                                    "total_line_items": {
                                        "type": "number"
                                    },
                                    "tax_rate": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "total_line_items_tax": {
                                        "type": "number"
                                    },
                                    "shipping_provider": {
                                        "type": "string"
                                    },
                                    "tracking_url": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "quantity",
                                    "total_line_items",
                                    "tax_rate",
                                    "total_line_items_tax"
                                ]
                            }
                        ]
                    }
                },
                "shipping": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Address"
                                },
                                {
                                    "properties": {
                                        "price": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "required": [
                                        "price"
                                    ]
                                }
                            ]
                        }
                    }
                },
                "billing": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                },
                "buyer": {
                    "$ref": "#/definitions/Buyer"
                }
            }
        },
        "Address": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "line_1": {
                    "type": "string"
                },
                "line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "country": {
                    "type": "string",
                    "pattern": "[A-Za-z]{2}"
                },
                "verified": {
                    "type": "boolean"
                },
                "default": {
                    "type": "boolean"
                }
            }
        },
        "Contact": {
            "properties": {
                "contact": {
                    "type": "object",
                    "properties": {
                        "addresses": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Address"
                            }
                        },
                        "emails": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "pattern": "^([a-z0-9_.-]+)@([da-z.-]+).([a-z.]{2,6})$"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "verified": {
                                        "type": "boolean"
                                    },
                                    "default": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "phones": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "value": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "verified": {
                                        "type": "boolean"
                                    },
                                    "default": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Buyer": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                },
                "original_reference": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "company",
                        "person",
                        "other"
                    ]
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "currency": {
                    "type": "string",
                    "pattern": "^[A-Z]{3}$"
                },
                "date_of_birth": {
                    "type": "string",
                    "format": "date"
                },
                "opt_out": {
                    "type": "boolean"
                },
                "note": {
                    "type": "string"
                },
                "contact": {
                    "$ref": "#/definitions/Contact"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Product": {
            "properties": {
                "product": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "source_id": {
                            "type": "string"
                        },
                        "original_reference": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "name": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "language": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "active": {
                            "type": "boolean"
                        },
                        "condition": {
                            "enum": [
                                "new",
                                "used",
                                "refurbished"
                            ],
                            "type": "string"
                        },
                        "currency": {
                            "type": "string",
                            "pattern": "^[A-Z]{3}$"
                        },
                        "price_per_unit": {
                            "type": "number"
                        },
                        "tax_rate": {
                            "type": "number"
                        },
                        "tax": {
                            "type": "number"
                        },
                        "identifier": {
                            "type": "object",
                            "properties": {
                                "sku": {
                                    "type": "string"
                                },
                                "ean": {
                                    "type": "string"
                                },
                                "asin": {
                                    "type": "string"
                                },
                                "upc": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        },
                        "stock_information": {
                            "type": "object",
                            "required": [
                                "in_stock"
                            ],
                            "properties": {
                                "in_stock": {
                                    "type": "boolean"
                                },
                                "inventory_level": {
                                    "type": "integer"
                                },
                                "inventory_unit": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "language": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "additional_attributes": {
                            "properties": {
                                "colors": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "sizes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "weight": {
                                    "type": "number"
                                },
                                "dimensions": {
                                    "type": "object",
                                    "properties": {
                                        "length": {
                                            "type": "number"
                                        },
                                        "width": {
                                            "type": "number"
                                        },
                                        "height": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "length",
                                        "width",
                                        "height"
                                    ]
                                }
                            }
                        },
                        "categories": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "category_id": {
                                        "type": "string"
                                    },
                                    "language": {
                                        "type": "string",
                                        "pattern": "^[A-Za-z]{2}$"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "picture_urls": {
                            "type": "array",
                            "items": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "url_original": {
                                            "type": "string"
                                        },
                                        "url_big": {
                                            "type": "string"
                                        },
                                        "url_medium": {
                                            "type": "string"
                                        },
                                        "url_small": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "brand": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "object",
                                    "properties": {
                                        "language": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "variants": {
                            "type": "array",
                            "items": [
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "required": [
                        "id",
                        "source_id",
                        "original_reference",
                        "url",
                        "created_at",
                        "updated_at",
                        "name",
                        "active",
                        "currency",
                        "price_per_unit",
                        "tax_rate",
                        "description",
                        "categories",
                        "picture_urls",
                        "stock_information"
                    ]
                }
            },
            "required": [
                "product"
            ]
        }
    }
}
